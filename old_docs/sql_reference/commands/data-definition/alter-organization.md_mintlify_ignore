---
layout: default
title: ALTER ORGANIZATION
description: Reference and syntax for the ALTER ORGANIZATION command.
great_grand_parent: SQL reference
grand_parent:  SQL commands
parent: Data definition
---

# ALTER ORGANIZATION

## ALTER ORGANIZATION SET

Updates the current organization.

Can be used to manage Single Sign-On configuration or network policy.

For more information, see:
- [Configure SSO]({% link Guides/security/sso/index.md %})
- [Manage network policies]({% link Guides/security/network-policies.md %}).

### Syntax

```sql
ALTER ORGANIZATION SET 
  [ SSO = '{
      “signOnUrl”: “<signOnUrl>”,
      “signOutUrl”: “<signOutUrl>”, 
      “issuer”: “<issuer>”,
      “provider”: “<idp>”,
      “label”: “<label>”,
      “fieldMapping”: “<field_mapping>”,
      “certificate”: “<certficate>”,
  }' ]
  [ NETWORK_POLICY = [ DEFAULT | <network_policy_name> ]
  ;
```

### Parameters 

{: .no_toc} 

| Parameter | Description |
| :--- | :--- |
| `<signOnUrl>` | The sign-on URL, provided by the SAML identity provider, to which Firebolt sends the SAML requests. The URL is IdP-specific and is determined by the identity provider during configuration. |
| `<signOutUrl>` | Optional. The sign-out URL, provided by the application owner, to be used when the user signs out of the application. |
| `<issuer>` | A unique value generated by the SAML identity provider specifying the issuer name. |
| `<idp>` | The provider's name - for example: “Okta”. Possible values include: `Okta`, `Onelogin`, `Salesforce`, `PingFederate`, or `Custom`. Use `Custom` label if you are using a SAML 2.0-compliant service or application as your IdP. Once the provider has been selected, it can't be changed, but you can [delete the SSO configuration]({% link Guides/security/sso/custom-sso.md %}#delete-sso). |
| `<label>` | The label to use for the SSO login button. If not provided, the IdP field value is used. |
| `<field_mapping>` | Optional.  Mapping to your identity provider's first and last name in key-value pairs. Mapping is required for Firebolt to fill in the login’s given and last names the first time the user logs in using SSO. If this field remains empty when a login that represents the user is being created, the login's first and last name fields will contain “NA”. Those fields can be updated later by running the [ALTER LOGIN]({% link sql_reference/commands/access-control/alter-login.md %}) command. 
| `<certificate>` | The certificate to verify the communication between the identity provider and Firebolt. |
| `<network_policy_name>` | An optional parameter to define the network policy to link to the organization. Specifying `DEFAULT` will detach any linked network policy.  |

### Example

The following command will configure SSO using the Okta identity provider. For more examples for other IdPs, see [Configure your identity provider]({% link Guides/security/sso/index.md %}).

```sql
ALTER ORGANIZATION SET SSO = '{
  “signOnUrl”: “https://abc.okta.com/app/okta_firebolt_app_id/sso/saml”,
  “signOutUrl”: “https://myapp.exampleco.com/saml/logout”, 
  “issuer”: “issuer”,
  “provider”: “Okta”, 
  “label”: “Okta”,
  “fieldMapping”: “mapping”,
  “certificate”: “XXXXXXXXXXXXXXXX”,
}';
```

## ALTER ORGANIZATION OWNER TO

Changes the owner of an organization.

You can view the current owner in the `organization_owner` column of the `information_schema.organization` view.

For more information, see [ownership]({% link Guides/security/ownership.md %}).

### Syntax

```sql
ALTER ORGANIZATION <organization_name> OWNER TO <identity>
```

### Parameters

{: .no_toc}

| Parameter             | Description                                                             |
|:----------------------|:------------------------------------------------------------------------|
| `<organization_name>` | The name of the organization to change the owner of.                    |
| `<identity>`          | The new owner of the organization, which can be the name of a login or service account. |

### Example

The following command will set organization owner to "alice@acme.com".

```sql
ALTER ORGANIZATION my_organization OWNER TO "alice@acme.com";
```
